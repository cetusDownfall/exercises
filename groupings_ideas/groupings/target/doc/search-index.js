var searchIndex = {};
searchIndex["groupings"] = {"doc":"A command line utility to provide subgroups biased towards  separating previously together individuals.","items":[[0,"group","groupings","Contains group and methods for it.",null,null],[3,"Group","groupings::group","",null,null],[11,"new","","Constructor taking a vector of strings and uses those as names for students.",0,{"inputs":[{"generics":["str"],"name":"vec"}],"output":{"name":"group"}}],[11,"set_name","","Name setter.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"remove_sub","","Remove a subgroup at an index and return all students in it to the group.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"add_sub","","Add a subgroup of a specific size.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"make_groups","","Evaluate what students should be in what groups. (only use after creating groups with add_sub)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"add_student","","Add a student",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"clear_subgroups","","Clear subgroups vec.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"fill_subs","","Temporary. Fills subgroups.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"finalise","","Finalise subgroups. Increment all weights.",0,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"student","groupings","Module containing student and methods for it.",null,null],[3,"Student","groupings::student","",null,null],[11,"id","","Returns the ID as a usize",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Student constructor. Takes an id, a name, and a number of weight slots to provide.",1,{"inputs":[{"name":"usize"},{"name":"str"},{"name":"usize"}],"output":{"name":"student"}}],[11,"add_slot","","Add an index to stor a student weight in.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"get_weight","","Returns the weight of a grouping of p1 and p2, if they are the same. Otherwise, returns the higher weight or none.",1,{"inputs":[{"name":"self"},{"name":"student"}],"output":{"generics":["u32"],"name":"option"}}],[11,"set_weight","","Setter for weight of a student.",1,{"inputs":[{"name":"self"},{"name":"student"},{"generics":["u32"],"name":"option"}],"output":null}],[11,"inc_weight","","Increments weight by 1 at a given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"set_pair_weight","","Sets a pair of students to a weight.",1,{"inputs":[{"name":"student"},{"name":"student"},{"generics":["u32"],"name":"option"}],"output":null}],[11,"name","","Access the name field immutably.",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"subgroup","groupings","Module containing the subgroup struct and methods for it.",null,null],[3,"Subgroup","groupings::subgroup","A small group of students. The second member is a max size.",null,null],[11,"new","","Initialises an empty subgroup.",2,{"inputs":[{"name":"usize"}],"output":{"name":"subgroup"}}],[11,"weight","","Gives the amount of times people in this group have been matched with an individual.",2,{"inputs":[{"name":"self"},{"name":"student"}],"output":{"name":"u32"}}],[11,"inc_weights","","Takes the current students in the subgroup and increments their weights for each  individual in the group by 1.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"try_add","","Adds a student if not full. Returns a tuple with the number of spots remaining and the student if it was full. If it wasn't full, then it returns none instead of a student.",2,{"inputs":[{"name":"self"},{"generics":["rc"],"name":"option"}],"output":{"name":"usize"}}],[11,"list_students","","Access the names of the students in this subgroup.",2,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"vec"}}]],"paths":[[3,"Group"],[3,"Student"],[3,"Subgroup"]]};
initSearch(searchIndex);
